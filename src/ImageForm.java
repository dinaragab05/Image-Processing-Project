/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imageprocessing;

import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Ahmed
 */
public class ImageForm extends javax.swing.JFrame {

    BufferedImage image = null;
    File f = null;

    public ImageForm() {
        initComponents();

        //read image file
        try {

            f = imageprocessing.ChooseImage.jfImage.getSelectedFile();
            image = ImageIO.read(f);
        } catch (IOException e) {
            System.out.println("Error: " + e);
        }
        showImage(image);
    }

    //show the Image to the form
    public void showImage(BufferedImage image) {
        ImageIcon icon = new ImageIcon(image);
        lblImage.setIcon(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblImage = new javax.swing.JLabel();
        btnRandom = new javax.swing.JButton();
        btnNegative = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btngray = new javax.swing.JButton();
        btnOreginal = new javax.swing.JButton();
        btnanother = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        setLocation(new java.awt.Point(150, 10));
        setPreferredSize(new java.awt.Dimension(1100, 700));

        lblImage.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        btnRandom.setBackground(new java.awt.Color(153, 0, 102));
        btnRandom.setForeground(new java.awt.Color(255, 255, 255));
        btnRandom.setText("random Image");
        btnRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRandomActionPerformed(evt);
            }
        });

        btnNegative.setBackground(new java.awt.Color(153, 0, 102));
        btnNegative.setForeground(new java.awt.Color(255, 255, 255));
        btnNegative.setText("negative Image");
        btnNegative.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegativeActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(153, 0, 102));
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("save this image");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btngray.setBackground(new java.awt.Color(153, 0, 102));
        btngray.setForeground(new java.awt.Color(255, 255, 255));
        btngray.setText("to grayscale");
        btngray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngrayActionPerformed(evt);
            }
        });

        btnOreginal.setBackground(new java.awt.Color(153, 0, 102));
        btnOreginal.setForeground(new java.awt.Color(255, 255, 255));
        btnOreginal.setText("Original Image");
        btnOreginal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOreginalActionPerformed(evt);
            }
        });

        btnanother.setBackground(new java.awt.Color(153, 0, 102));
        btnanother.setForeground(new java.awt.Color(255, 255, 255));
        btnanother.setText("choose another image");
        btnanother.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnanotherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btngray, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(135, 135, 135)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOreginal, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNegative))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnanother, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRandom)
                        .addGap(124, 124, 124))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btngray)
                    .addComponent(btnNegative)
                    .addComponent(btnRandom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOreginal)
                    .addComponent(btnanother)
                    .addComponent(btnSave))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRandomActionPerformed
     
      int width = 1100;
     int height = 700;
     //create buffered image object img
     BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
     //file object
     File f = null;
     //create random image pixel by pixel
     for(int y = 0; y < height; y++){
       for(int x = 0; x < width; x++){
         int a = (int)(Math.random()*256); //alpha
         int r = (int)(Math.random()*256); //red
         int g = (int)(Math.random()*256); //green
         int b = (int)(Math.random()*256); //blue
 
         int p = (a<<24) | (r<<16) | (g<<8) | b; //pixel
 
         image.setRGB(x, y, p);
       }
     }   

  showImage(image);
//random image
    }//GEN-LAST:event_btnRandomActionPerformed


    private void btnNegativeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNegativeActionPerformed
       try {

            f = imageprocessing.ChooseImage.jfImage.getSelectedFile();
            image = ImageIO.read(f);
        } catch (IOException e) {
            System.out.println("Error: " + e);
        }
        for (int x = 0; x < image.getWidth(); x++) {
      for (int y = 0; y < image.getHeight(); y++) {
        int rgba = image.getRGB(x, y);
        Color col = new Color(rgba, true);
        col = new Color(255 - col.getRed(), 255 - col.getGreen(),
            255 - col.getBlue());
        image.setRGB(x, y, col.getRGB());
      }
    }

 showImage(image);
//image to negative image
    }//GEN-LAST:event_btnNegativeActionPerformed


    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String name = JOptionPane.showInputDialog("enter image name");
        //get the image extention 
        String type = f.getAbsolutePath().substring(f.getAbsolutePath().indexOf("."), (f.getAbsolutePath().length()));
        //to not recieve error change the  folder you want to save the image to
        //System.out.println(type);
        name = "C:\\Users\\Ahmed\\Desktop\\ProjectImages\\" + name + type;
        // System.out.println(name);
        //System.out.println( type.substring((type.indexOf(".")+1)));
        try {
            f = new File(name);
            ImageIO.write(image, type.substring((type.indexOf(".") + 1)), f);
            JOptionPane.showMessageDialog(this, "Image Saved");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e);
        }

    }//GEN-LAST:event_btnSaveActionPerformed


    private void btngrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngrayActionPerformed
 try {

            f = imageprocessing.ChooseImage.jfImage.getSelectedFile();
            image = ImageIO.read(f);
        } catch (IOException e) {
            System.out.println("Error: " + e);
        }
 //get image width and height
    int width = image.getWidth();
    int height = image.getHeight();
    

    //convert to grayscale
    for(int y = 0; y < height; y++){
      for(int x = 0; x < width; x++){
        int p = image.getRGB(x,y);

        int a = (p>>24)&0xff;
        int r = (p>>16)&0xff;
        int g = (p>>8)&0xff;
        int b = p&0xff;

        //calculate average
        int avg = (r+g+b)/3;

        //replace RGB value with avg
        p = (a<<24) | (avg<<16) | (avg<<8) | avg;

        image.setRGB(x, y, p);
      }
    }
    
         
     showImage(image);
        //image to grayscale image

    }//GEN-LAST:event_btngrayActionPerformed


    private void btnOreginalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOreginalActionPerformed
        f = imageprocessing.ChooseImage.jfImage.getSelectedFile();
        try {
            image = ImageIO.read(f);
            showImage(image);
        } catch (IOException ex) {

        }

    }//GEN-LAST:event_btnOreginalActionPerformed


    private void btnanotherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnanotherActionPerformed
        ChooseImage imageForm = new ChooseImage();
        imageForm.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnanotherActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImageForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNegative;
    private javax.swing.JButton btnOreginal;
    private javax.swing.JButton btnRandom;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnanother;
    private javax.swing.JButton btngray;
    private javax.swing.JLabel lblImage;
    // End of variables declaration//GEN-END:variables
}
